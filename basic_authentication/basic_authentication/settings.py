"""
Django settings for basic_authentication project.

Generated by 'django-admin startproject' using Django 2.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, 'static')
MEDIA_DIR = os.path.join(BASE_DIR, 'media')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$-e3)mi^zw!kmfl5h#na(^3%_*$u$+0$%q9tsw*&h-@7+tz9=i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'basic_authentication.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'basic_authentication.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation *************************************************************************
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators
# Below are the hashing algorithms we user. We start with the strongest, Argon2, and work our way down the list if that doesn't work, with the last being built into django.
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher'
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher'
    'django.contrib.auth.hashers.BCryptPasswordHasher'
    'django.contrib.auth.hashers.PBKDF2PasswordHasher'
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher'
]

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', # Doesn't allow you to use your username inside your password
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', # Makes sure it has a minimum length
        'OPTIONS': {'min_length': 5} # adding options allows you to customize your validations
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', # Checks for common passwords, ex: 123
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', # Makes sure it has numbers
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [STATIC_DIR]

# MEDIA
MEDIA_URL = '/media/'
MEDIA_ROOT = [MEDIA_DIR]
